import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

#1
print('1. Biodiversity Project')

species = pd.read_csv('species_info.csv')
print(species.head())

#2
print('2. Inspected the DataFrame')

species_count = species.scientific_name.nunique()
print(species_count)
species_type = species.category.unique()
print(species_type)
conservation_statuses = species.conservation_status.unique()
print(conservation_statuses)

#3+4
print('3. Analyze Species Conservation Status and 4. Analyze Conservation Status II')

species.fillna('No Intervention', inplace = True)
conservation_counts = species.groupby('conservation_status').scientific_name.nunique().reset_index()
print(conservation_counts)

_______________________________________

import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

#5
print('5. Plotting Conservation Status by Species')

species = pd.read_csv('species_info.csv')

species.fillna('No Intervention', inplace = True)

protection_counts = species.groupby('conservation_status')\
    .scientific_name.nunique().reset_index()\
    .sort_values(by='scientific_name')

plt.figure(figsize=(10, 4))
ax = plt.subplot()

plt.bar(range(len(protection_counts)),protection_counts.scientific_name.values)

ax.set_xticks(range(len(protection_counts)))
ax.set_xticklabels(protection_counts.conservation_status.values)

plt.ylabel('Number of Species')
plt.title('Conservation Status by Species')
plt.show()
_______________________________________

import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

species = pd.read_csv('species_info.csv')

species.fillna('No Intervention', inplace = True)

#6&7
print('6. Investigating Endagered Species and 7. Investigating Endagered Species II')
species['is_protected'] = species.conservation_status.apply(lambda x: 'True' if x <> 'No Intervention' else 'False')
"""print(species.head())"""

category_counts = species.groupby(['category','is_protected'])['scientific_name'].count().reset_index()
print(category_counts.head())

category_pivot = category_counts.pivot(columns='is_protected',
index='category', 
values='scientific_name').reset_index()

category_pivot.columns = ['category','not_protected','protected']

category_pivot['percent_protected'] = category_pivot['protected']/(category_pivot['protected']+category_pivot['not_protected'])

print(category_pivot)

_______________________________________

import codecademylib
import pandas as pd
from matplotlib import pyplot as plt
from scipy.stats import chi2_contingency 

#8&9
print('8. Chi-Squared Test for Significance and 9. Final Thoughts on Protected Species')

# Loading the Data
species = pd.read_csv('species_info.csv')

# print species.head()

# Inspecting the DataFrame
species_count = len(species)

species_type = species.category.unique()

conservation_statuses = species.conservation_status.unique()

# Analyze Species Conservation Status
conservation_counts = species.groupby('conservation_status').scientific_name.count().reset_index()

# print conservation_counts

# Analyze Species Conservation Status II
species.fillna('No Intervention', inplace = True)

conservation_counts_fixed = species.groupby('conservation_status').scientific_name.count().reset_index()

# Plotting Conservation Status by Species
protection_counts = species.groupby('conservation_status')\
    .scientific_name.count().reset_index()\
    .sort_values(by='scientific_name')
    
# plt.figure(figsize=(10, 4))
# ax = plt.subplot()
# plt.bar(range(len(protection_counts)),
#        protection_counts.scientific_name.values)
# ax.set_xticks(range(len(protection_counts)))
# ax.set_xticklabels(protection_counts.conservation_status.values)
# plt.ylabel('Number of Species')
# plt.title('Conservation Status by Species')
# labels = [e.get_text() for e in ax.get_xticklabels()]
# print ax.get_title()
# plt.show()

species['is_protected'] = species.conservation_status != 'No Intervention'

category_counts = species.groupby(['category', 'is_protected'])\
                         .scientific_name.count().reset_index()
  
# print category_counts.head()

category_pivot = category_counts.pivot(columns='is_protected', index='category', values='scientific_name').reset_index()

category_pivot.columns = ['category', 'not_protected', 'protected']

category_pivot['percent_protected'] = category_pivot.protected / (category_pivot.protected + category_pivot.not_protected)

print category_pivot

contingency = [[30, 146], [75, 413]]
#those are not the numbers i got in my table
chi2, pval, dof, expected = chi2_contingency(contingency) 
print(pval)

contingency = [[30, 146], [5, 73]]
#those are not the numbers i got in my table
chi2, pval_reptile_mammal, dof, expected = chi2_contingency(contingency) 
print(pval_reptile_mammal)

_______________________________________

import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

#10, 11, & 12
print('10. Observations DataFrame, 11. In Search of Sheep, & 12. Merging Sheep and Obseration DataFrames')

species = pd.read_csv('species_info.csv')
species.fillna('No Intervention', inplace = True)
species['is_protected'] = species.conservation_status != 'No Intervention'

observations = pd.read_csv('observations.csv')
print(observations.head())

species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)
print(species.head())

species_is_sheep = species[species.is_sheep == True]
print(species_is_sheep)

sheep_species = species[(species.is_sheep == True) & (species.category == 'Mammal')]
print(sheep_species)

sheep_observations = pd.merge(sheep_species, observations)
print(sheep_observations.head())

obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()
print(obs_by_park)

_______________________________________

import codecademylib
import pandas as pd
from matplotlib import pyplot as plt

#13
print('13. Plotting Sheep Sightings')

species = pd.read_csv('species_info.csv')
species['is_sheep'] = species.common_names.apply(lambda x: 'Sheep' in x)
sheep_species = species[(species.is_sheep) & (species.category == 'Mammal')]

observations = pd.read_csv('observations.csv')

sheep_observations = observations.merge(sheep_species)

obs_by_park = sheep_observations.groupby('park_name').observations.sum().reset_index()
print(obs_by_park.head())

plt.figure(figsize=(16, 4))
ax = plt.subplot()

plt.bar(range(len(obs_by_park)),obs_by_park.observations)

ax.set_xticks(range(len(obs_by_park)))
ax.set_xticklabels(obs_by_park.park_name)

plt.ylabel('Number of Observations')
plt.title('Observations of Sheep per Week')
plt.show()

_______________________________________

#14 & 15
print('14. Foot and Mouth Reduction Effort - Sample Size Determination & 15. Foot and Mouth Reduction Effort - Final Thoughts')

baseline = 0.15
minimum_detectable_effect = 0.33
sample_size_per_variant = 890
yellowstone_weeks_observing = 1.7554
bryce_weeks_observing = 3.56